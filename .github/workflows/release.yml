name: release
on:
  release:
    types: [created, edited]
  push:
    branches:
      # dev branches to test workflows
      - ci-pipeline-dev
jobs:
  goreleaser:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      deployments: write
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Prepare
        id: prepare
        run: |
          # Get rid of v prefix.
          ref_name="${GITHUB_REF_NAME/v/}"
          echo "version=$ref_name" >> $GITHUB_ENV

          # Check if tag is a valid semver without any suffixes; it must not be a pre-release.
          if [[ "$ref_name" =~ ^(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)$ ]]; then
            echo "pre_release=false" >> $GITHUB_ENV
          fi
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.21"
      - name: Run GoReleaser
        if: github.event_name == 'release' && (github.event.action == 'created' || github.event.action == 'edited')
        uses: goreleaser/goreleaser-action@v4.2.0
        with:
          distribution: goreleaser
          version: v1.15.2
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run GoReleaser
        if: github.event_name != 'release'
        uses: goreleaser/goreleaser-action@v4.2.0
        with:
          distribution: goreleaser
          version: v1.15.2
          args: release --snapshot --clean
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: dist/*.tar.gz
